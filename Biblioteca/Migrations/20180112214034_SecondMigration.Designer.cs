// <auto-generated />
using Biblioteca;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Biblioteca.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20180112214034_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biblioteca.Modelo.Carnet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Carnets");
                });

            modelBuilder.Entity("Biblioteca.Modelo.CodigoPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarnetId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("CarnetId");

                    b.ToTable("CodigoPath");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarnetId");

                    b.Property<string>("Direccion");

                    b.Property<int?>("ExperienciaLaboralId");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Identidad");

                    b.Property<string>("Nombre");

                    b.Property<string>("NumeroTelefono");

                    b.Property<string>("PrimerApellido");

                    b.Property<string>("Provincia");

                    b.Property<string>("SegundoApellido");

                    b.HasKey("Id");

                    b.HasIndex("CarnetId");

                    b.HasIndex("ExperienciaLaboralId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CIF");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Provincia");

                    b.Property<int>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Biblioteca.Modelo.EspecialidadPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExperienciaLaboralId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("ExperienciaLaboralId");

                    b.ToTable("EspecialidadPath");
                });

            modelBuilder.Entity("Biblioteca.Modelo.ExperienciaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaFinal");

                    b.Property<DateTime>("FechaInicio");

                    b.HasKey("Id");

                    b.ToTable("ExperienciaLaborales");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int?>("EmpleadoId");

                    b.Property<int?>("EmpresaId");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<int>("NumeroCandidatos");

                    b.Property<string>("Provincia");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Biblioteca.Modelo.CodigoPath", b =>
                {
                    b.HasOne("Biblioteca.Modelo.Carnet")
                        .WithMany("Codigo")
                        .HasForeignKey("CarnetId");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Empleado", b =>
                {
                    b.HasOne("Biblioteca.Modelo.Carnet", "Carnet")
                        .WithMany()
                        .HasForeignKey("CarnetId");

                    b.HasOne("Biblioteca.Modelo.ExperienciaLaboral", "ExperienciaLaboral")
                        .WithMany()
                        .HasForeignKey("ExperienciaLaboralId");
                });

            modelBuilder.Entity("Biblioteca.Modelo.EspecialidadPath", b =>
                {
                    b.HasOne("Biblioteca.Modelo.ExperienciaLaboral")
                        .WithMany("Especialidad")
                        .HasForeignKey("ExperienciaLaboralId");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Oferta", b =>
                {
                    b.HasOne("Biblioteca.Modelo.Empleado")
                        .WithMany("Oferta")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("Biblioteca.Modelo.Empresa", "Empresa")
                        .WithMany("Oferta")
                        .HasForeignKey("EmpresaId");
                });
#pragma warning restore 612, 618
        }
    }
}
